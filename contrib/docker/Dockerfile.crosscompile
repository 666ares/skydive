FROM ubuntu:18.04

VOLUME /root/go/src/github.com/skydive-project/skydive
VOLUME /root/go/.cache/govendor

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get -y update \
    && apt-get -y install software-properties-common \
    && add-apt-repository -y ppa:ubuntu-toolchain-r/ppa \
    && apt-get -y update \
    && apt-get -y install git make flex bison wget unzip golang libpcap0.8-dev npm

# EBPF would require llvm-6.0 clang-6.0 however static compulation packages uninstall clang dependancies
# libstdc++-5-dev and libc6-dev

RUN PROTOC_VER=3.5.1; \
    wget --no-verbose https://github.com/google/protobuf/releases/download/v${PROTOC_VER}/protoc-${PROTOC_VER}-linux-$(uname -m).zip \
    && unzip protoc-${PROTOC_VER}-linux-$(uname -m).zip \
    && mv bin/protoc /usr/bin/

RUN git clone https://github.com/the-tcpdump-group/libpcap.git

# Arch dependence
ARG TARGET_ARCH=s390x
ARG TARGET_GOARCH=$TARGET_ARCH
ARG DEBARCH=$TARGET_GOARCH

RUN apt-get -y install gcc-${TARGET_ARCH}-linux-gnu

RUN cd libpcap/ \
    && CC=${TARGET_ARCH}-linux-gnu-gcc ./configure --prefix=/usr/local --disable-shared --disable-dbus --disable-bluetooth --host=${TARGET_ARCH}-linux-gnu \
    && make \
    && make install \
    && cd ..

# Install package for static compilation
RUN dpkg --add-architecture $DEBARCH \
    && echo "deb [arch=$DEBARCH] http://ports.ubuntu.com/ubuntu-ports bionic main universe" >> /etc/apt/sources.list \
    && apt-get -y update; \
    apt-get -y install zlib1g-dev:$DEBARCH \
                   liblzma-dev:$DEBARCH \
                   libc++-dev:$DEBARCH \
                   libc-dev:$DEBARCH \
                   libpcap0.8-dev:$DEBARCH \
                   linux-libc-dev:$DEBARCH

RUN mkdir -p /root/go/bin && chmod a+wrx /root/go/bin

RUN arch="$(dpkg --print-architecture)" \
    && wget --no-verbose -O /gosu "https://github.com/tianon/gosu/releases/download/1.10/gosu-${arch##*-}" \
    && chmod a+x /gosu

ARG UID=1000
ENV UID=$UID
RUN chown -R $UID /root/

WORKDIR /root/go/src/github.com/skydive-project/skydive

ENV TARGET_ARCH=$TARGET_ARCH
ENV TARGET_GOARCH=$TARGET_GOARCH

CMD chown -R $UID /root/go/.cache/govendor \
    && /gosu $UID env \
    HOME=/root \
    GOPATH=/root/go \
    PATH=/root/go/bin:$PATH \
    CGO_ENABLED=1 \
    CC=${TARGET_ARCH}-linux-gnu-gcc \
    GOOS=linux \
    GOARCH=$TARGET_GOARCH \
    make govendor .bindata .proto compile.static WITH_OPENCONTRAIL=false WITH_EBPF=true
