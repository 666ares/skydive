# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.define "agent1" do |agent|
    agent.vm.box = "fedora/26-cloud-base"
    agent.vm.hostname = "agent1"
    agent.vm.network "private_network", ip: "192.168.50.20"
    agent.vm.synced_folder ".", "/vagrant", :disabled => true
    agent.vm.provision "common", type: "shell", path: "setup-common.sh"
    agent.vm.provider :libvirt do |domain|
      domain.memory = 1536
    end
  end

  config.vm.define "agent2" do |agent|
    agent.vm.box = "fedora/26-cloud-base"
    agent.vm.hostname = "agent2"
    agent.vm.network "private_network", ip: "192.168.50.30"
    agent.vm.synced_folder ".", "/vagrant", :disabled => true
    agent.vm.provision "common", type: "shell", path: "setup-common.sh"
    agent.vm.provider :libvirt do |domain|
      domain.memory = 1536
    end
  end

  config.vm.define "analyzer" do |analyzer|
    analyzer.vm.box = "fedora/26-cloud-base"
    analyzer.vm.hostname = "analyzer"
    analyzer.vm.network "private_network", ip: "192.168.50.10"
    analyzer.vm.synced_folder ".", "/vagrant", :disabled => true
    analyzer.vm.provision "common", type: "shell", path: "setup-common.sh"
    analyzer.vm.provision :ansible do |ansible|
      ansible.playbook = "provisioning/playbook.yml.sample"
      ansible.extra_vars = {
        "skydive_deployment_mode" => ENV.fetch("DEPLOYMENT_MODE", "binary"),
        "skydive_extra_config" => {
          "ws_pong_timeout" => 10,
        },
	"skydive_nic" => "ansible_eth1"
      }
      ansible.groups = {
        "analyzers" => ["analyzer"],
        "agents" => ["agent1", "agent2"],
      }
      ansible.limit = "all"
      ansible.verbose = true
    end
    analyzer.vm.provider :libvirt do |domain|
      domain.memory = 1024
    end
  end
end
