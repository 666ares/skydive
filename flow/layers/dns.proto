syntax = "proto3";
package layers;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/skydive-project/skydive/flow/layers";

// DNSMX specifies the mail server responsible for accepting email messages on behalf of a domain name.
message DNSMX {
	uint32 preference = 1;
	string name = 2;
}

// DNSQuestion stores the question for a DNS query
message DNSQuestion {
	string name = 1;
	string type = 2;
	string class = 3;
}

// DNSResourceRecord holds resource records for DNS structs
message DNSResourceRecord {
	string name = 1;
	string type = 2;
	string class = 3;
	uint32 TTL = 4;
	uint32 data_length = 5;
	string IP = 6;
	string NS = 7;
	string c_name = 8 [json_name="CName"];;
	string PTR = 9;
	repeated string TXTs = 10;
	DNSSOA SOA = 11;
	DNSSRV SRV = 12;
	DNSMX MX = 13;
	repeated DNSOPT OPT = 14;
}

// DNSSOA is a type of resource record in the Domain Name System (DNS) containing administrative information
// about the zone, especially regarding zone transfers.
message DNSSOA {
	string m_name = 1;
	string r_name = 2;
	uint32 serial = 3;
	uint32 refresh = 4;
	uint32 retry = 5;
	uint32 expire = 6;
	uint32 minimum = 7;
}

// DNSSRV is a specification of data in the Domain Name System defining the
// location, i.e. the hostname and port number, of servers for specified services.
message DNSSRV {
	uint32 priority = 1;
	uint32 weight = 2;
	uint32 port = 3;
	string name = 4;
}

// DNSOPT is a DNS Option, see RFC6891, section 6.1.2
message DNSOPT {
	string code = 1;
	string data = 2;
}

// LayerDNS wrapper to generate extra layer
message DNS {
	uint32 ID = 1;
	bool QR = 2;
	string op_code = 3;
	bool AA = 4;
	bool TC = 5;
	bool RD = 6;
	bool RA = 7;
	uint32 z = 8;
	string response_code = 9;
	uint32 q_d_count = 10;
	uint32 a_n_count = 11;
	uint32 n_s_count = 12;
	uint32 a_r_count = 13;
	repeated DNSQuestion questions = 14;
	repeated DNSResourceRecord answers = 15;
	repeated DNSResourceRecord authorities = 16;
	repeated DNSResourceRecord additionals = 17;
	google.protobuf.Timestamp timestamp = 18;
}
